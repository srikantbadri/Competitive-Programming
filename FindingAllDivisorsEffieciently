//Coder- Srikant Badri:)
//Problem Code: -ALATE (Codechef)
//link-->  https://www.codechef.com/problems/ALATE/
//Finding divisors of all numbers upto 10^6
#include<iostream>
#include<vector>
#include<cstring>
#include<cstdio>
#include<cmath>
typedef unsigned long long int ll;
ll mod=1000000007;
using namespace std;
int main()
{
	vector<ll> Factors[100005];
	for(ll i=1;i<=100000;i++)
	{
		for(ll j=i;j<=100000;j+=i)
		{
			Factors[j].push_back(i);		
		}
	}
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ll t;
	scanf("%lld",&t);
	while(t--)
	{
		ll i,j,N,Q;
		scanf("%lld %lld",&N,&Q);
		ll A[N+1];
		ll sum[N+1];
		memset(sum,0,sizeof(sum));
		for(i=1;i<=N;i++)
		{
			scanf("%lld",&A[i]);
		}
		for(i=1;i<=N;i++)
		{
			for(j=i;j<=N;j+=i)
			{
				sum[i]=(sum[i]+(A[j]*A[j])%mod)%mod;
			}
		}
		while(Q--)
		{
			int a;
			scanf("%d",&a);
			if(a==1)
			{
				ll index;
				scanf("%lld",&index);
				printf("%lld\n",sum[index]%mod);
			}
			else
			{
				ll index,changeTo;
				scanf("%lld %lld",&index,&changeTo);				
				ll size=Factors[index].size();
				for(i=0;i<size;i++)
				{
					sum[Factors[index][i]]=(2*mod+sum[Factors[index][i]]-(A[index]*A[index])%mod+(changeTo*changeTo)%mod)%mod;
				}
				A[index]=changeTo;
			}
		}
	}
	return 0;
}
